name: Continuous Deployment (CD)

on:
  workflow_dispatch:
    inputs:
      host_dns:
        description: "Public DNS or IP (e.g., DuckDNS)"
        required: true
      db_url:
        description: "Database JDBC URL"
        required: true
      db_user:
        description: "Database user"
        required: true
      db_pass:
        description: "Database password"
        required: true
#  push:
#    branches:
#      - "**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ github.event.inputs.host_dns }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Stop and remove existing container
            docker stop hiringgo || true
            docker rm hiringgo || true
            
            # Pull the latest image from Docker Hub
            docker pull ${{ needs.build-and-push.outputs.image-tag }}
            
            # Run the new container
            docker run -d --name hiringgo \
              --restart unless-stopped \
              --add-host=host.docker.internal:host-gateway \
              -e SPRING_DATASOURCE_URL="${{ github.event.inputs.db_url }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ github.event.inputs.db_user }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ github.event.inputs.db_pass }}" \
              -e SPRING_PROFILES_ACTIVE=prod \
              -p 8080:8080 \
              ${{ needs.build-and-push.outputs.image-tag }}
            
            # Verify deployment
            sleep 10
            docker logs hiringgo --tail 20
            
            # Health check
            curl -f http://localhost:8080/actuator/health || echo "Health check failed"