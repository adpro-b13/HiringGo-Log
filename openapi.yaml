openapi: 3.0.0
info:
  title: HiringGo Log Service API
  version: v1
  description: API for managing student activity logs.

servers:
  - url: http://localhost:8080 # Adjust if your service runs on a different port or path
    description: Local development server

components:
  schemas:
    Log:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier for the log.
        studentId:
          type: string
          description: Identifier of the student who created the log.
        title:
          type: string
          description: Title of the log entry.
        description:
          type: string
          description: Detailed description of the activity.
        category:
          type: string
          description: Category of the log (e.g., Internship, Project).
        vacancyId:
          type: string
          description: Identifier of the vacancy related to this log (if applicable).
        startTime:
          type: string
          format: date-time
          description: Start time of the activity.
        endTime:
          type: string
          format: date-time
          description: End time of the activity.
        logDate:
          type: string
          format: date
          description: Date the log entry pertains to.
        status:
          type: string
          enum: [REPORTED, ACCEPTED, REJECTED]
          readOnly: true
          description: Current status of the log.
      required:
        - title
        - description
        - category
        - startTime
        - endTime
        - logDate
        - studentId

    VerificationAction:
      type: string
      enum: [ACCEPT, REJECT]
      description: Action to perform for verification (ACCEPT or REJECT).

paths:
  /logs:
    post:
      summary: Create a new log entry
      tags:
        - Logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        '201':
          description: Log created successfully.
          headers:
            Location:
              schema:
                type: string
              description: URL of the newly created log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '400':
          description: Invalid input provided.
    get:
      summary: Retrieve all logs for the current student
      tags:
        - Logs
      responses:
        '200':
          description: A list of logs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
        '401':
          description: Unauthorized if student ID cannot be determined.

  /logs/{id}:
    put:
      summary: Update an existing log entry
      tags:
        - Logs
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the log to update.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        '200':
          description: Log updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '400':
          description: Invalid input or log status does not allow update.
        '404':
          description: Log not found.
    delete:
      summary: Delete a log entry
      tags:
        - Logs
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the log to delete.
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Log deleted successfully.
        '400':
          description: Log status does not allow deletion.
        '404':
          description: Log not found.

  /logs/{id}/verify:
    post:
      summary: Verify a log entry (Accept or Reject)
      tags:
        - Logs
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the log to verify.
          schema:
            type: integer
            format: int64
        - name: action
          in: query
          required: true
          description: Verification action (ACCEPT or REJECT).
          schema:
            $ref: '#/components/schemas/VerificationAction'
      responses:
        '200':
          description: Log verification status updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '400':
          description: Invalid action or log already verified.
        '404':
          description: Log not found.
